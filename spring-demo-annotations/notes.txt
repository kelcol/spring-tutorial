FIELD INJECTION
java reflection - inject dependencies by setting field values on your class directly (even pvt fields)

1. Config DI with autowiring
	- applied directly to field
	- no need for setter methods
	
Three kinds of injection: constructor, setter, and field
	- choose a style and stay consistent!
	


@Qualifer
	- can be used for all injection types to avoid non-unique bean errors
	

BEAN SCOPES YO

default scope of beans is singleton (cached in mem, shared ref)
prototype... create new instance everytime (new ref)

Note about destroy cycle and prototype scope: for protype scoped beans, Spring can't call @PreDestroy method (https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-scopes-prototype - has to do with limits of containers knowledge irt bean)

	


